<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Wishlist</title>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
  <style>
    body {
        background-color: #f4f4f4;
        margin: 0;
        padding: 0;
    }

    .sidebar {
        background-color: #fff;
        border-right: 1px solid #ddd;
        height: calc(100vh - 56px);
        overflow-y: auto;
        padding: 20px;
    }

    .content {
        padding: 20px;
    }

    .card {
        margin-bottom: 20px;
        position: relative;
    }

    .card img {
        height: 200px;
        object-fit: cover;
    }

    .card-title {
        font-size: 1.2em;
        margin-bottom: 10px;
    }

    .card-text {
        margin-bottom: 10px;
    }

    .rating {
        color: #FFD700;
    }
    .footer{
        width:100%;
    }

    .delete-icon {
        position: absolute;
        top: 10px;
        right: 10px;
        color: red;
        cursor: pointer;
    }

    .wishlist-title {
        margin-bottom: 20px;
        font-size: 24px;
        font-weight: bold;
    }
    .empty-wishlist {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 200px; /* You can adjust this height based on your preference */
    background-color: #fff7e6; /* Light orange background */
    color: #ff6600; /* Orange text color */
    font-size: 1.5em;
    font-weight: bold;
    border-radius: 8px; /* Optional: Adds rounded corners */
}

  </style>
</head>
<body>
  <div class="col-md-9 content">
      <div class="wishlist-title">
          Wishlist
      </div>
      <div class="row" id="wishlist-container">
          {{#if products.length}}
            {{#each products}}
              <div class="col-md-4">
                  <div class="card">
                      <img src="{{this.thumbnailPaths.[0]}}" class="card-img-top" alt="{{this.productName}}">
                      <div class="card-body">
                          <h5 class="card-title">{{this.productName}}</h5>
                          <p class="card-text">Category: {{this.categoryName}}</p>
                          <p class="card-text">Price: ${{this.price}}</p>
                          <div class="rating">
                              {{#each (range this.rating)}}
                                <i class="fas fa-star"></i>
                              {{/each}}
                              {{#if (isHalf this.rating)}}
                                <i class="fas fa-star-half-alt"></i>
                              {{/if}}
                              {{#each (range (subtract 5 this.rating))}}
                                <i class="far fa-star"></i>
                              {{/each}}
                          </div>
                          <i class="fas fa-trash-alt delete-icon" title="Delete" data-product-id="{{this._id}}"></i>
                      </div>
                  </div>
              </div>
            {{/each}}
          {{else}}
        <div class="col-12">
    <div class="empty-wishlist">
      <p>Your wishlist is empty.</p>
    </div>
  </div>
           
          {{/if}}
      </div>
  </div>

  <script>
  document.addEventListener('DOMContentLoaded', () => {
  const wishlistContainer = document.getElementById('wishlist-container');

  wishlistContainer.addEventListener('click', async (event) => {
    if (event.target.classList.contains('delete-icon')) {
      const productId = event.target.dataset.productId;

      // Use SweetAlert for confirmation
      Swal.fire({
        title: 'Are you sure?',
        text: 'Do you want to remove this item from your wishlist?',
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#3085d6',
        cancelButtonColor: '#d33',
        confirmButtonText: 'Yes, delete it!'
      }).then(async (result) => {
        if (result.isConfirmed) {
          try {
            const response = await fetch('/deletWishlist', {
              method: 'DELETE',
              headers: {
                'Content-Type': 'application/json'
              },
              body: JSON.stringify({ productId: productId })
            });

            if (response.ok) {
              // Remove the item from the DOM
              event.target.closest('.col-md-4').remove();

              // Check if the wishlist is now empty
              if (!wishlistContainer.querySelector('.col-md-4')) {
                wishlistContainer.innerHTML = `
                  <div class="col-12">
                    <div class="empty-wishlist">
                      <p>Your wishlist is empty.</p>
                    </div>
                  </div>
                `;
              }

              // Display success message
              Swal.fire(
                'Deleted!',
                'Your item has been removed from the wishlist.',
                'success'
              );
            } else {
              console.error('Failed to remove product from wishlist');
              Swal.fire(
                'Error!',
                'Failed to remove product from wishlist. Please try again.',
                'error'
              );
            }
          } catch (error) {
            console.error('Error:', error);
            Swal.fire(
              'Error!',
              'An error occurred. Please try again.',
              'error'
            );
          }
        }
      });
    }
  });
});



  </script>
</body>
</html>
